/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as IndexImport } from './routes/index'
import { Route as InvoicesIndexImport } from './routes/invoices/index'
import { Route as ContactsIndexImport } from './routes/contacts/index'

// Create/Update Routes

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const InvoicesIndexRoute = InvoicesIndexImport.update({
  id: '/invoices/',
  path: '/invoices/',
  getParentRoute: () => rootRoute,
} as any)

const ContactsIndexRoute = ContactsIndexImport.update({
  id: '/contacts/',
  path: '/contacts/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/contacts/': {
      id: '/contacts/'
      path: '/contacts'
      fullPath: '/contacts'
      preLoaderRoute: typeof ContactsIndexImport
      parentRoute: typeof rootRoute
    }
    '/invoices/': {
      id: '/invoices/'
      path: '/invoices'
      fullPath: '/invoices'
      preLoaderRoute: typeof InvoicesIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/contacts': typeof ContactsIndexRoute
  '/invoices': typeof InvoicesIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/contacts': typeof ContactsIndexRoute
  '/invoices': typeof InvoicesIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/contacts/': typeof ContactsIndexRoute
  '/invoices/': typeof InvoicesIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths: '/' | '/contacts' | '/invoices'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/contacts' | '/invoices'
  id: '__root__' | '/' | '/contacts/' | '/invoices/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  ContactsIndexRoute: typeof ContactsIndexRoute
  InvoicesIndexRoute: typeof InvoicesIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  ContactsIndexRoute: ContactsIndexRoute,
  InvoicesIndexRoute: InvoicesIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/contacts/",
        "/invoices/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/contacts/": {
      "filePath": "contacts/index.tsx"
    },
    "/invoices/": {
      "filePath": "invoices/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
